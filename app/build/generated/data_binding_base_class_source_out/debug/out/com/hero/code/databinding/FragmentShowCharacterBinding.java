// Generated by data binding compiler. Do not edit!
package com.hero.code.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.hero.code.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentShowCharacterBinding extends ViewDataBinding {
  @NonNull
  public final ItemCharacterBinding firstCharacter;

  @NonNull
  public final View firstDivider;

  @NonNull
  public final ItemCharacterBinding fourthCharacter;

  @NonNull
  public final View fourthDivider;

  @NonNull
  public final ItemCharacterBinding secondCharacter;

  @NonNull
  public final View secondDivider;

  @NonNull
  public final ItemCharacterBinding thirdCharacter;

  @NonNull
  public final View thirdDivider;

  protected FragmentShowCharacterBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ItemCharacterBinding firstCharacter, View firstDivider, ItemCharacterBinding fourthCharacter,
      View fourthDivider, ItemCharacterBinding secondCharacter, View secondDivider,
      ItemCharacterBinding thirdCharacter, View thirdDivider) {
    super(_bindingComponent, _root, _localFieldCount);
    this.firstCharacter = firstCharacter;
    this.firstDivider = firstDivider;
    this.fourthCharacter = fourthCharacter;
    this.fourthDivider = fourthDivider;
    this.secondCharacter = secondCharacter;
    this.secondDivider = secondDivider;
    this.thirdCharacter = thirdCharacter;
    this.thirdDivider = thirdDivider;
  }

  @NonNull
  public static FragmentShowCharacterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_show_character, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentShowCharacterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentShowCharacterBinding>inflateInternal(inflater, R.layout.fragment_show_character, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentShowCharacterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_show_character, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentShowCharacterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentShowCharacterBinding>inflateInternal(inflater, R.layout.fragment_show_character, null, false, component);
  }

  public static FragmentShowCharacterBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentShowCharacterBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentShowCharacterBinding)bind(component, view, R.layout.fragment_show_character);
  }
}
